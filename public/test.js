/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./js/includes/AdaForm.js":
/*!********************************!*\
  !*** ./js/includes/AdaForm.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AdaForm\": () => (/* binding */ AdaForm)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar AdaForm = /*#__PURE__*/function (_HTMLFormElement) {\n  _inherits(AdaForm, _HTMLFormElement);\n\n  var _super = _createSuper(AdaForm);\n\n  function AdaForm() {\n    var _this;\n\n    _classCallCheck(this, AdaForm);\n\n    _this = _super.call(this);\n    _this.isValidated = null;\n    return _this;\n  }\n\n  _createClass(AdaForm, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.addEventListener('submit', this.submit);\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      this.removeEventListener('submit', this.submit);\n    } // Override the submit method to add custom behavior\n\n  }, {\n    key: \"submit\",\n    value: function submit(e) {\n      var _this2 = this;\n\n      this.isValidated = true; //prove me wrong at least once      \n\n      this.querySelectorAll('ada-input').forEach(function (input) {\n        if (input.getAttribute('type') != 'submit' && !input._isValid()) {\n          _this2.isValidated = false;\n        }\n      });\n\n      if (!this.isValidated) {\n        var inputTarget = this.querySelector('ada-input.error input') || this.querySelector('ada-input.error textarea') || this.querySelector('ada-input.error select');\n        inputTarget.focus();\n\n        if (\"preventDefault\" in e) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var formData = new FormData(this);\n      var obj = {};\n\n      var _iterator = _createForOfIteratorHelper(formData),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              key = _step$value[0],\n              value = _step$value[1];\n\n          if (key == null || value == null) {\n            continue;\n          }\n\n          if (obj[key] !== undefined) {\n            if (!Array.isArray(obj[key])) {\n              obj[key] = [obj[key]];\n            }\n\n            obj[key].push(value);\n          } else {\n            obj[key] = value;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return obj;\n    }\n  }]);\n\n  return AdaForm;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLFormElement));\n\n\n\n//# sourceURL=webpack://ada-compliant-forms/./js/includes/AdaForm.js?");

/***/ }),

/***/ "./js/includes/AdaInput.js":
/*!*********************************!*\
  !*** ./js/includes/AdaInput.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AdaInput\": () => (/* binding */ AdaInput)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction generateID() {\n  return \"_\".concat(Math.random().toString(36).substr(2, 9));\n}\n\nvar AdaInput = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(AdaInput, _HTMLElement);\n\n  var _super = _createSuper(AdaInput);\n\n  function AdaInput() {\n    var _this;\n\n    _classCallCheck(this, AdaInput);\n\n    _this = _super.call(this);\n    _this.loaded = false;\n    return _this;\n  }\n\n  _createClass(AdaInput, [{\n    key: \"attributeChangedCallback\",\n    value: function attributeChangedCallback(name, oldValue, newValue) {\n      if (name == 'value') {\n        var target = this.querySelector('textarea') || this.querySelector('select') || this.querySelector('input');\n\n        if (target) {\n          target.value = newValue;\n        }\n      }\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      var _this2 = this;\n\n      if (this.loaded) {\n        return false;\n      } else {\n        this.loaded = true;\n      }\n\n      if (!this.id) {\n        this.id = generateID();\n      }\n\n      switch (this.getAttribute('type')) {\n        case 'checkbox':\n        case 'radio':\n          this._createCheckboxInputs();\n\n          break;\n\n        case 'textarea':\n          this._createTextarea();\n\n          break;\n\n        case 'select':\n          this._createSelect();\n\n          break;\n\n        default:\n          this._createDefaultInput();\n\n      }\n\n      if (this.hasAttribute('description')) {\n        this._createDescription();\n      }\n\n      requestAnimationFrame(function () {\n        _this2.querySelectorAll('input, textarea, select').forEach(function (input) {\n          input.addEventListener('input', function (e) {\n            return _this2._isValid();\n          });\n          input.addEventListener('input', function (e) {\n            return _this2.dispatchEvent(new CustomEvent('interact', {\n              detail: e.target.value\n            }));\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_createDescription\",\n    value: function _createDescription() {\n      var p = document.createElement('p');\n      p.innerText = this.getAttribute('description');\n      p.classList.add('ada-input--description');\n      this.append(p);\n    }\n  }, {\n    key: \"_createTextarea\",\n    value: function _createTextarea() {\n      var label = document.createElement('label');\n      label.innerText = this.getAttribute('label');\n      label.setAttribute('for', \"\".concat(this.id, \"-input\"));\n      this.append(label);\n      var input = document.createElement('textarea');\n      input.placeholder = this.getAttribute('placeholder') || '';\n      input.value = this.getAttribute('value');\n      input.name = this.getAttribute('name');\n      input.id = \"\".concat(this.id, \"-input\");\n\n      this._addInputProperties(input);\n\n      this.append(input);\n      var rules = this.getAttribute('rules');\n\n      if (rules && rules.indexOf('required') != -1) {\n        input.setAttribute('aria-required', true);\n        label.innerHTML = label.innerText + '<span aria-hidden=\"true\">*</span>';\n      }\n    }\n  }, {\n    key: \"_createCheckboxInputs\",\n    value: function _createCheckboxInputs() {\n      //wrap all contents in a fieldset\n      var fieldset = document.createElement('fieldset');\n      Array.from(this.children).forEach(function (child) {\n        return fieldset.append(child);\n      });\n      this.append(fieldset);\n      var legend = document.createElement('legend');\n      legend.innerHTML = this.getAttribute('label');\n      fieldset.prepend(legend);\n      var rules = this.getAttribute('rules');\n\n      if (rules && rules.indexOf('required') != -1) {\n        fieldset.setAttribute('aria-required', true);\n        legend.innerHTML = legend.innerText + '<span aria-hidden=\"true\">*</span>';\n      }\n    }\n  }, {\n    key: \"_createDefaultInput\",\n    value: function _createDefaultInput() {\n      var label = document.createElement('label');\n      label.innerText = this.getAttribute('label');\n      label.setAttribute('for', \"\".concat(this.id, \"-input\"));\n      this.append(label);\n      var input = document.createElement('input');\n      input.type = this.getAttribute('type');\n      input.name = this.getAttribute('name');\n      input.placeholder = this.getAttribute('placeholder') || '';\n      input.value = this.getAttribute('value');\n      input.id = \"\".concat(this.id, \"-input\");\n\n      this._addInputProperties(input);\n\n      this.append(input);\n\n      if (input.type == 'hidden') {\n        label.style.clip = 'rect(0 0 0 0)';\n        label.style.clipPath = 'inset(50%)';\n        label.style.height = '1px';\n        label.style.overflow = 'hidden';\n        label.style.position = 'absolute';\n        label.style.whiteSpace = 'nowrap';\n        label.style.width = '1px';\n      }\n\n      var rules = this.getAttribute('rules');\n\n      if (rules && rules.indexOf('required') != -1) {\n        input.setAttribute('aria-required', true);\n        label.innerHTML = label.innerText + '<span aria-hidden=\"true\">*</span>';\n      }\n\n      if (input.type == \"submit\") {\n        input.removeAttribute('name');\n        input.removeAttribute('placeholder');\n        label.remove();\n      }\n    }\n  }, {\n    key: \"_createSelect\",\n    value: function _createSelect() {\n      var _this3 = this;\n\n      var label = document.createElement('label');\n      label.innerText = this.getAttribute('label');\n      label.setAttribute('for', \"\".concat(this.id, \"-input\"));\n      this.append(label);\n      var input = document.createElement('select');\n      input.name = this.getAttribute('name');\n      input.id = \"\".concat(this.id, \"-input\");\n\n      this._addInputProperties(input);\n\n      this.append(input);\n      setTimeout(function () {\n        return input.value = _this3.getAttribute('value');\n      });\n      var rules = this.getAttribute('rules');\n\n      if (rules && rules.indexOf('required') != -1) {\n        input.setAttribute('aria-required', true);\n        label.innerHTML = label.innerText + '<span aria-hidden=\"true\">*</span>';\n      }\n    }\n  }, {\n    key: \"_addInputProperties\",\n    value: function _addInputProperties(input) {\n      var attrs = Array.prototype.slice.call(this.attributes);\n\n      if (attrs) {\n        attrs.forEach(function (a) {\n          if (a.name.indexOf('input-') !== -1) {\n            var newAttr = a.name.replace('input-', '');\n            input.setAttribute(newAttr, a.value);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_isValid\",\n    value: function _isValid() {\n      var _this4 = this;\n\n      var rules = this.getAttribute('rules');\n      var isValid = true; //prove me wrong once\n\n      var errors = [];\n\n      if (this.getAttribute('type') == 'submit') {\n        return false;\n      }\n\n      if (rules) {\n        rules.split('|').forEach(function (rule) {\n          var target = _this4.querySelector('textarea') || _this4.querySelector('select') || _this4.querySelector('input');\n\n          var value = target.value;\n          var split = rule.split(':');\n          var name = split[0];\n          var modifier = split[1];\n\n          switch (name) {\n            case 'required':\n              if (!_this4._validateRequired(value)) {\n                errors.push('This field is required');\n                isValid = false;\n              }\n\n              break;\n\n            case 'email':\n              if (!_this4._validateEmail(value)) {\n                errors.push('This field must be a valid email');\n                isValid = false;\n              }\n\n              break;\n\n            case 'min':\n              if (!_this4._validateMin(value, modifier)) {\n                errors.push('This field must be greater or equal to ' + modifier);\n                isValid = false;\n              }\n\n              break;\n\n            case 'max':\n              if (!_this4._validateMax(value, modifier)) {\n                errors.push('This field must be less than or equal to ' + modifier);\n                isValid = false;\n              }\n\n              break;\n\n            case 'maxLength':\n              if (!_this4._validateMaxLength(value, modifier)) {\n                errors.push('This field must be less than or equal to ' + modifier + ' characters');\n                isValid = false;\n              }\n\n              break;\n\n            case 'minLength':\n              if (!_this4._validateMinLength(value, modifier)) {\n                errors.push('This field must be greater than or equal to ' + modifier + ' characters');\n                isValid = false;\n              }\n\n              break;\n\n            case 'sameAs':\n              if (!_this4._validateSameAs(value, modifier)) {\n                var confirmInputLabel = _this4.closest('form').querySelector(\"input[name=\\\"\".concat(modifier, \"\\\"]\")).parentNode.querySelector('label').innerText.replace('*', '').toLowerCase();\n\n                errors.push(\"This field must match the \".concat(confirmInputLabel, \" input\"));\n                isValid = false;\n              }\n\n              break;\n\n            case 'mime':\n              if (!_this4._validateMime(value, modifier)) {\n                errors.push('This field must match the file type: ' + modifier);\n                isValid = false;\n              }\n\n              break;\n\n            case 'dateBefore':\n              if (!_this4._validateDateBefore(value, modifier)) {\n                errors.push('This field must be before or equal to ' + modifier);\n                isValid = false;\n              }\n\n              break;\n\n            case 'dateAfter':\n              if (!_this4._validateDateAfter(value, modifier)) {\n                errors.push('This field must be after or equal to ' + modifier);\n                isValid = false;\n              }\n\n              break;\n\n            case 'regex':\n              if (!_this4._validateRegex(value, modifier)) {\n                errors.push('This field is invalid');\n                isValid = false;\n              }\n\n              break;\n\n            case 'url':\n              if (!_this4._validateURL(value, modifier)) {\n                errors.push('This field is not a valid URL');\n                isValid = false;\n              }\n\n              break;\n          }\n        });\n      }\n\n      this._setErrors(errors);\n\n      return isValid;\n    }\n  }, {\n    key: \"_validateRequired\",\n    value: function _validateRequired(value) {\n      var _this5 = this;\n\n      var inputType = this.getAttribute('type');\n\n      if (inputType == 'checkbox' || inputType == 'radio') {\n        var isValid = false;\n        this.querySelectorAll(\"[name=\\\"\".concat(this.getAttribute('name'), \"\\\"]\")).forEach(function (input) {\n          if (input.checked || _this5.selected) {\n            isValid = true;\n          }\n        });\n        return isValid;\n      } else {\n        return value != undefined && value.length;\n      }\n    }\n  }, {\n    key: \"_validateURL\",\n    value: function _validateURL(value) {\n      var res = value.match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g);\n      return res !== null;\n    }\n  }, {\n    key: \"_validateEmail\",\n    value: function _validateEmail(value) {\n      return !value ? true : /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value);\n    }\n  }, {\n    key: \"_validateDateBefore\",\n    value: function _validateDateBefore(value, checkAgainst) {\n      var checkDate = new Date(checkAgainst);\n      var setDate = new Date(value + ' 00:00:00');\n      return !value ? true : checkDate >= setDate;\n    }\n  }, {\n    key: \"_validateDateAfter\",\n    value: function _validateDateAfter(value, checkAgainst) {\n      var checkDate = new Date(checkAgainst);\n      var setDate = new Date(value + ' 00:00:00');\n      return !value ? true : checkDate <= setDate;\n    }\n  }, {\n    key: \"_validateRegex\",\n    value: function _validateRegex(value, reg) {\n      var testvs = new RegExp(reg);\n      return !value ? true : testvs.test(value);\n    }\n  }, {\n    key: \"_validateMime\",\n    value: function _validateMime(value, checkAgainst) {\n      var file = this.querySelector('input').files[0];\n      var isValid = true; //prove me wrong\n\n      if (file) {\n        if (checkAgainst.indexOf('*') != -1) {\n          isValid = file.type.indexOf(checkAgainst.replaceAll('*', '')) !== -1;\n        } else {\n          isValid = file.type != checkAgainst;\n        }\n      }\n\n      return isValid;\n    }\n  }, {\n    key: \"_validateSameAs\",\n    value: function _validateSameAs(value, checkAgainst) {\n      var targetValue = this.closest('form').querySelector(\"input[name=\\\"\".concat(checkAgainst, \"\\\"]\")).value;\n      return !value ? true : value == targetValue;\n    }\n  }, {\n    key: \"_validateMinLength\",\n    value: function _validateMinLength(value, checkAgainst) {\n      return !value ? true : value.length >= checkAgainst;\n    }\n  }, {\n    key: \"_validateMaxLength\",\n    value: function _validateMaxLength(value, checkAgainst) {\n      return !value ? true : value.length <= checkAgainst;\n    }\n  }, {\n    key: \"_validateMin\",\n    value: function _validateMin(value, checkAgainst) {\n      var inputType = this.getAttribute('type');\n\n      if (inputType == 'checkbox') {\n        var checkedChildren = this.querySelectorAll('input:checked');\n        return !checkedChildren.length ? true : parseFloat(checkAgainst) <= checkedChildren.length;\n      } else {\n        return !value ? true : parseFloat(checkAgainst) <= parseFloat(value);\n      }\n    }\n  }, {\n    key: \"_validateMax\",\n    value: function _validateMax(value, checkAgainst) {\n      var inputType = this.getAttribute('type');\n\n      if (inputType == 'checkbox') {\n        var checkedChildren = this.querySelectorAll('input:checked');\n        return !checkedChildren.length ? true : parseFloat(checkAgainst) >= checkedChildren.length;\n      } else {\n        return !value ? true : parseFloat(checkAgainst) >= parseFloat(value);\n      }\n    }\n  }, {\n    key: \"_setErrors\",\n    value: function _setErrors(errors) {\n      var forceFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var prevErrors = this.querySelectorAll('.ada-input--error') || [];\n      prevErrors.forEach(function (err) {\n        return err.remove();\n      });\n\n      if (errors.length) {\n        this.classList.add('error');\n        this.classList.remove('valid');\n      } else {\n        this.classList.remove('error');\n        this.classList.add('valid');\n      }\n\n      if (errors.length) {\n        var errorContainer = document.createElement('ul');\n        errorContainer.id = \"\".concat(this.id, \"-errors\");\n        errorContainer.classList.add('ada-input--error');\n        errors.forEach(function (error) {\n          var el = document.createElement('li');\n          el.innerText = error;\n          errorContainer.append(el);\n        }); //maybe this should be `fieldset` for checkboxes and radios?\n\n        var targetInput = this.querySelector('textarea') || this.querySelector('input') || this.querySelector('select');\n        targetInput.setAttribute('aria-describedby', \"\".concat(this.id, \"-errors\"));\n        this.append(errorContainer);\n\n        if (forceFocus) {\n          targetInput.focus();\n        }\n      } else {\n        var _targetInput = this.querySelector('textarea') || this.querySelector('input') || this.querySelector('select');\n\n        _targetInput.removeAttribute('aria-describedby');\n\n        var _errorContainer = this.querySelector(\"#\".concat(this.id, \"-errors\"));\n\n        if (_errorContainer) {\n          _errorContainer.remove();\n        }\n      }\n    }\n  }, {\n    key: \"setError\",\n    value: function setError(error) {\n      this._setErrors([error], true);\n    }\n  }], [{\n    key: \"observedAttributes\",\n    get: function get() {\n      return ['value'];\n    }\n  }]);\n\n  return AdaInput;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\n\n\n//# sourceURL=webpack://ada-compliant-forms/./js/includes/AdaInput.js?");

/***/ }),

/***/ "./js/includes/AdaOption.js":
/*!**********************************!*\
  !*** ./js/includes/AdaOption.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AdaOption\": () => (/* binding */ AdaOption)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction generateID() {\n  return \"_\".concat(Math.random().toString(36).substr(2, 9));\n}\n\nvar AdaOption = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(AdaOption, _HTMLElement);\n\n  var _super = _createSuper(AdaOption);\n\n  function AdaOption() {\n    var _this;\n\n    _classCallCheck(this, AdaOption);\n\n    _this = _super.call(this);\n    _this.loaded = false;\n    return _this;\n  }\n\n  _createClass(AdaOption, [{\n    key: \"attributeChangedCallback\",\n    value: function attributeChangedCallback(name, oldValue, newValue) {\n      if (name == 'checked') {\n        var target = this.querySelector('input');\n\n        if (target) {\n          if (newValue == 'true') {\n            target.setAttribute('checked', true);\n          } else {\n            target.removeAttribute('checked');\n          }\n        }\n      }\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      var _this2 = this;\n\n      if (this.loaded) {\n        return false;\n      } else {\n        this.loaded = true;\n      }\n\n      if (this.parentNode.getAttribute('type') == 'select') {\n        var id = generateID();\n        var select = this.parentNode.querySelector('select');\n        var option = document.createElement('option');\n        option.value = this.getAttribute('value');\n        option.textContent = this.getAttribute('label');\n        select.append(option);\n        this.remove();\n      } else {\n        var _id = generateID();\n\n        var input = document.createElement('input');\n        input.id = _id;\n        input.type = this.parentNode.parentNode.getAttribute('type');\n        input.name = this.parentNode.parentNode.getAttribute('name');\n        input.value = this.getAttribute('value');\n        this.append(input);\n\n        if (this.getAttribute('checked') == 'true') {\n          input.setAttribute('checked', true);\n        }\n\n        var label = document.createElement('label');\n        label.innerHTML = this.getAttribute('label');\n        label.setAttribute('for', _id);\n        this.append(label);\n        input.addEventListener('change', function (e) {\n          _this2.dispatchEvent(new CustomEvent('interact', {\n            detail: input.checked\n          }));\n        });\n      }\n    }\n  }], [{\n    key: \"observedAttributes\",\n    get: function get() {\n      return ['checked'];\n    }\n  }]);\n\n  return AdaOption;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\n\n\n//# sourceURL=webpack://ada-compliant-forms/./js/includes/AdaOption.js?");

/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AdaForm\": () => (/* reexport safe */ _includes_AdaForm__WEBPACK_IMPORTED_MODULE_0__.AdaForm),\n/* harmony export */   \"AdaInput\": () => (/* reexport safe */ _includes_AdaInput__WEBPACK_IMPORTED_MODULE_1__.AdaInput),\n/* harmony export */   \"AdaOption\": () => (/* reexport safe */ _includes_AdaOption__WEBPACK_IMPORTED_MODULE_2__.AdaOption)\n/* harmony export */ });\n/* harmony import */ var _includes_AdaForm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./includes/AdaForm */ \"./js/includes/AdaForm.js\");\n/* harmony import */ var _includes_AdaInput__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./includes/AdaInput */ \"./js/includes/AdaInput.js\");\n/* harmony import */ var _includes_AdaOption__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./includes/AdaOption */ \"./js/includes/AdaOption.js\");\n\n\n\n\n\n//# sourceURL=webpack://ada-compliant-forms/./js/main.js?");

/***/ }),

/***/ "./js/test.js":
/*!********************!*\
  !*** ./js/test.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main.js */ \"./js/main.js\");\n\ncustomElements.define('ada-form', _main_js__WEBPACK_IMPORTED_MODULE_0__.AdaForm, {\n  \"extends\": 'form'\n});\ncustomElements.define('ada-input', _main_js__WEBPACK_IMPORTED_MODULE_0__.AdaInput);\ncustomElements.define('ada-option', _main_js__WEBPACK_IMPORTED_MODULE_0__.AdaOption);\n\n//# sourceURL=webpack://ada-compliant-forms/./js/test.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./js/test.js");
/******/ 	
/******/ })()
;